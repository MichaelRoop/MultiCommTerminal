<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:MultiCommTerminal.UserControls"
	>

    <Style x:Key="RoundEdgeButton" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="75"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Foreground" Value="Blue"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="5" Background="Transparent" 
                            BorderBrush="Blue"  BorderThickness="1" Padding="2" >
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="TextIconButton" TargetType="{x:Type controls:UC_IconButton}">
        <Setter Property="Width" Value="75"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Foreground" Value="Blue"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:UC_IconButton}">
                    <Border x:Name="buttonBorder" CornerRadius="5" BorderBrush="Blue" BorderThickness="1" Background="{TemplateBinding Background}" >
                        <Grid>
                            <DockPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                <!-- Have to pad the image seperately since the Content already is padded -->
                                <Border Padding="6">
                                    <Image Source="{TemplateBinding Img}" 
                                   VerticalAlignment="Stretch" HorizontalAlignment="Stretch" 
                                   RenderOptions.BitmapScalingMode="HighQuality"
                                   RenderOptions.EdgeMode="Aliased" />
                                </Border>
                                <!--<ContentPresenter x:Name="buttonText" VerticalAlignment="Center" HorizontalAlignment="Center" />-->
                                <TextBlock x:Name="buttonText" Text="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center" TextTrimming="CharacterEllipsis" />
                            </DockPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="buttonBorder" Property="Opacity" Value=".6" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="buttonBorder" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="buttonText" Property="Opacity" Value=".5" />
                            <Setter TargetName="buttonText" Property="Opacity" Value=".5" />
                            <Setter TargetName="buttonText" Property="Opacity" Value=".5" />
                            <!--<Setter TargetName="roundedImageButtonBorder" Property="Background" Value="{DynamicResource Background_ButtonClicked}" />
                            <Setter TargetName="roundedImageButtonText" Property="Foreground" Value="{DynamicResource Foreground_ButtonClicked}" />-->
                        </Trigger>
                        <Trigger Property="IsPressed" Value="False">
                            <Setter TargetName="buttonText" Property="Opacity" Value="1" />
                            <Setter TargetName="buttonText" Property="Opacity" Value="1" />
                            <Setter TargetName="buttonText" Property="Opacity" Value="1" />
                            <!--<Setter TargetName="roundedImageButtonBorder" Property="Background" Value="{StaticResource Background_Button}" />
                            <Setter TargetName="roundedImageButtonText" Property="Foreground" Value="{StaticResource Foreground_Button}" />-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>